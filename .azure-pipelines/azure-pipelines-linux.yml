# This file was generated automatically from conda-smithy. To update this configuration,
# update the conda-forge.yml and/or the recipe/meta.yaml.
# -*- mode: yaml -*-

jobs:
- job: linux
  pool:
    vmImage: ubuntu-latest
  strategy:
    matrix:
      linux_64_amrex_precisiondpmpimpich:
        CONFIG: linux_64_amrex_precisiondpmpimpich
        UPLOAD_PACKAGES: 'True'
        DOCKER_IMAGE: quay.io/condaforge/linux-anvil-x86_64:alma9
      linux_64_amrex_precisiondpmpinompi:
        CONFIG: linux_64_amrex_precisiondpmpinompi
        UPLOAD_PACKAGES: 'True'
        DOCKER_IMAGE: quay.io/condaforge/linux-anvil-x86_64:alma9
      linux_64_amrex_precisiondpmpiopenmpi:
        CONFIG: linux_64_amrex_precisiondpmpiopenmpi
        UPLOAD_PACKAGES: 'True'
        DOCKER_IMAGE: quay.io/condaforge/linux-anvil-x86_64:alma9
      linux_64_amrex_precisionspmpimpich:
        CONFIG: linux_64_amrex_precisionspmpimpich
        UPLOAD_PACKAGES: 'True'
        DOCKER_IMAGE: quay.io/condaforge/linux-anvil-x86_64:alma9
      linux_64_amrex_precisionspmpinompi:
        CONFIG: linux_64_amrex_precisionspmpinompi
        UPLOAD_PACKAGES: 'True'
        DOCKER_IMAGE: quay.io/condaforge/linux-anvil-x86_64:alma9
      linux_64_amrex_precisionspmpiopenmpi:
        CONFIG: linux_64_amrex_precisionspmpiopenmpi
        UPLOAD_PACKAGES: 'True'
        DOCKER_IMAGE: quay.io/condaforge/linux-anvil-x86_64:alma9
      linux_aarch64_amrex_precisiondpmpimpich:
        CONFIG: linux_aarch64_amrex_precisiondpmpimpich
        UPLOAD_PACKAGES: 'True'
        DOCKER_IMAGE: quay.io/condaforge/linux-anvil-x86_64:alma9
      linux_aarch64_amrex_precisiondpmpinompi:
        CONFIG: linux_aarch64_amrex_precisiondpmpinompi
        UPLOAD_PACKAGES: 'True'
        DOCKER_IMAGE: quay.io/condaforge/linux-anvil-x86_64:alma9
      linux_aarch64_amrex_precisiondpmpiopenmpi:
        CONFIG: linux_aarch64_amrex_precisiondpmpiopenmpi
        UPLOAD_PACKAGES: 'True'
        DOCKER_IMAGE: quay.io/condaforge/linux-anvil-x86_64:alma9
      linux_aarch64_amrex_precisionspmpimpich:
        CONFIG: linux_aarch64_amrex_precisionspmpimpich
        UPLOAD_PACKAGES: 'True'
        DOCKER_IMAGE: quay.io/condaforge/linux-anvil-x86_64:alma9
      linux_aarch64_amrex_precisionspmpinompi:
        CONFIG: linux_aarch64_amrex_precisionspmpinompi
        UPLOAD_PACKAGES: 'True'
        DOCKER_IMAGE: quay.io/condaforge/linux-anvil-x86_64:alma9
      linux_aarch64_amrex_precisionspmpiopenmpi:
        CONFIG: linux_aarch64_amrex_precisionspmpiopenmpi
        UPLOAD_PACKAGES: 'True'
        DOCKER_IMAGE: quay.io/condaforge/linux-anvil-x86_64:alma9
      linux_ppc64le_amrex_precisiondpmpimpich:
        CONFIG: linux_ppc64le_amrex_precisiondpmpimpich
        UPLOAD_PACKAGES: 'True'
        DOCKER_IMAGE: quay.io/condaforge/linux-anvil-x86_64:alma9
      linux_ppc64le_amrex_precisiondpmpinompi:
        CONFIG: linux_ppc64le_amrex_precisiondpmpinompi
        UPLOAD_PACKAGES: 'True'
        DOCKER_IMAGE: quay.io/condaforge/linux-anvil-x86_64:alma9
      linux_ppc64le_amrex_precisiondpmpiopenmpi:
        CONFIG: linux_ppc64le_amrex_precisiondpmpiopenmpi
        UPLOAD_PACKAGES: 'True'
        DOCKER_IMAGE: quay.io/condaforge/linux-anvil-x86_64:alma9
      linux_ppc64le_amrex_precisionspmpimpich:
        CONFIG: linux_ppc64le_amrex_precisionspmpimpich
        UPLOAD_PACKAGES: 'True'
        DOCKER_IMAGE: quay.io/condaforge/linux-anvil-x86_64:alma9
      linux_ppc64le_amrex_precisionspmpinompi:
        CONFIG: linux_ppc64le_amrex_precisionspmpinompi
        UPLOAD_PACKAGES: 'True'
        DOCKER_IMAGE: quay.io/condaforge/linux-anvil-x86_64:alma9
      linux_ppc64le_amrex_precisionspmpiopenmpi:
        CONFIG: linux_ppc64le_amrex_precisionspmpiopenmpi
        UPLOAD_PACKAGES: 'True'
        DOCKER_IMAGE: quay.io/condaforge/linux-anvil-x86_64:alma9
  timeoutInMinutes: 360
  variables: {}

  steps:
  # configure qemu binfmt-misc running.  This allows us to run docker containers
  # embedded qemu-static
  - script: |
      docker run --rm --privileged multiarch/qemu-user-static:register --reset --credential yes
      ls /proc/sys/fs/binfmt_misc/
    condition: not(startsWith(variables['CONFIG'], 'linux_64'))
    displayName: Configure binfmt_misc

  - script: |
        export CI=azure
        export flow_run_id=azure_$(Build.BuildNumber).$(System.JobAttempt)
        export remote_url=$(Build.Repository.Uri)
        export sha=$(Build.SourceVersion)
        export GIT_BRANCH=$BUILD_SOURCEBRANCHNAME
        export FEEDSTOCK_NAME=$(basename ${BUILD_REPOSITORY_NAME})
        if [[ "${BUILD_REASON:-}" == "PullRequest" ]]; then
          export IS_PR_BUILD="True"
        else
          export IS_PR_BUILD="False"
        fi
        .scripts/run_docker_build.sh
    displayName: Run docker build
    env:
      BINSTAR_TOKEN: $(BINSTAR_TOKEN)
      FEEDSTOCK_TOKEN: $(FEEDSTOCK_TOKEN)
      STAGING_BINSTAR_TOKEN: $(STAGING_BINSTAR_TOKEN)
